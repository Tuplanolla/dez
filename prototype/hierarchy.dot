digraph hierarchy {
  // Ideally, the following list be in alphabetical order.

  /*
  Does [label = "\N\nOperational Classes"]
  Entails [label = "\N\nOperational Notations"]
  Gives [label = "\N\nDerived Operational Definitions"]
  Has [label = "\N\nDerived Operational Notations"]
  Is [label = "\N\nPredicative Classes"]
  Justifies [label = "\N\nPredicative Notations"]
  Provides [label = "\N\nDerived Predicative Definitions"]
  Supports [label = "\N\nDerived Predicative Notations"]
  */

  // Less ideally, the following pairs would be in alphabetical order.

  /*
  Does [label = "\N\nOperational Classes"]
  Is [label = "\N\nPredicative Classes"]

  Entails [label = "\N\nOperational Notations"]
  Justifies [label = "\N\nPredicative Notations"]

  Gives [label = "\N\nDerived Operational Definitions"]
  Provides [label = "\N\nDerived Predicative Definitions"]

  Has [label = "\N\nDerived Operational Notations"]
  Supports [label = "\N\nDerived Predicative Notations"]
  */

  // Currently, the assignment is the following.

  /*
  Has [label = "\N\nOperational Classes"]
  Provides [label = "\N\nDerived Operational Definitions"]
  Supports [label = "\N\nDerived Operational Notations"]
  Is [label = "\N\nPredicative Classes"]
  Justifies [label = "\N\nDerived Predicative Definitions"]
  */

  Does [label = "\N\nOperational Classes"]
  Is [label = "\N\nPredicative Classes"]
  Entails [label = "\N\nOperational Notations"]
  Justifies [label = "\N\nPredicative Notations"]
  Gives [label = "\N\nDerived Operational Definitions"]
  Provides [label = "\N\nDerived Predicative Definitions"]
  Has [label = "\N\nDerived Operational Notations"]
  Supports [label = "\N\nDerived Predicative Notations"]

  Does -> Entails
  Entails -> Gives
  Gives -> Has
  Has -> Is
  Is -> Justifies
  Justifies -> Provides
  Provides -> Supports

  Does -> Does
  Entails -> Entails
  Gives -> Gives
  Has -> Has
  Is -> Is
  Justifies -> Justifies
  Provides -> Provides
  Supports -> Supports
}
