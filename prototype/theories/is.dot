digraph Is {
  label = "Predicative Class Hierarchy without Internal Homs"

  node [fontname = monospace]

  Assoc [label = "Associative\nx + (y + z) == (x + y) + z"]
  Eq [label = "Equivalence"]
  ExtAssoc [label = "ExternallyAssociative\nx +< (y >+ z) == (x +< y) >+ z"]
  Grp [label = "Group"]
  Inv [label = "Invertible"]
  LExtInv [label = "LeftExternallyInvertible\n>-< x >+< x == 0"]
  LExtUn [label = "LeftExternallyUnital\n0 +< x == x"]
  LInv [label = "LeftInvertible\n- x + x == 0"]
  LUn [label = "LeftUnital\n0 + x == x"]
  Mon [label = "Monoid"]
  Proper [label = "Proper"]
  RExtInv [label = "RightExternallyInvertible\nx >+< >-< x == 0"]
  RExtUn [label = "RightExternallyUnital\nx >+ 0 == x"]
  RInv [label = "RightInvertible\nx + - x == 0"]
  RUn [label = "RightUnital\nx + 0 == x"]
  Refl [label = "Reflexive\nx ~~ x"]
  ReflEq [label = "ReflexiveEquivalence\nx == x"]
  SGrp [label = "Semigroup"]
  Sym [label = "Symmetric\nx ~~ y -> y ~~ x"]
  SymEq [label = "SymmetricEquivalence\nx == y -> y == x"]
  Trans [label = "Transitive\nx ~~ y -> y ~~ z -> x ~~ z"]
  TransEq [label = "TransitiveEquivalence\nx == y -> y == z -> x == z"]
  Un [label = "Unital"]

  edge [style = solid]

  Assoc -> SGrp
  Eq -> Assoc
  Eq -> ExtAssoc
  Eq -> LExtInv
  Eq -> LExtUn
  Eq -> LInv
  Eq -> LUn
  Eq -> RExtInv
  Eq -> RExtUn
  Eq -> RInv
  Eq -> RUn
  Inv -> Grp
  LInv -> Inv
  LUn -> Un
  Mon -> Grp
  Proper -> Grp
  Proper -> SGrp
  RInv -> Inv
  RUn -> Un
  ReflEq -> Eq
  SGrp -> Mon
  SymEq -> Eq
  TransEq -> Eq
  Un -> Mon

  edge [style = dashed]

  ExtAssoc -> Assoc
  LExtInv -> LInv
  LExtUn -> LUn
  RExtInv -> RInv
  RExtUn -> RUn
  Refl -> ReflEq
  Sym -> SymEq
  Trans -> TransEq
}
