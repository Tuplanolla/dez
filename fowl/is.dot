digraph Is {
  label = "Predicative Class Hierarchy"

  node [fontname = monospace]

  IsAntisym [label = "\N\nantisym (x y : A) (a : x ~ y) (b : y ~ x) : x = y"]
  IsAssoc [label = "\N\nassoc (x y z : A) : x + (y + z) = (x + y) + z"]
  IsAsym [label = "\N\nasym (x y : A) (a : x ~ y) (b : y ~ x) : 0"]
  IsCohOrdRels [label = "\N\ncoh_ord_rels (x y : A) : x < y <-> x <= y /\\ x <> y"]
  IsComono [label = "\N\ncomono (x y : A) (l : f x <= f y) : x <= y"]
  IsCompat [label = "\N\ncompat (a : A) (x : C) (b : B) : a ,+ (x +, b) = (a ,+ x) +, b"]
  IsCompatL [label = "\N\ncompat_l (a b : A) (x : B) : a ,+ (b ,+ x) = (a + b) ,+ x"]
  IsCompatR [label = "\N\ncompat_r (x : B) (a b : A) : x +, (a + b) = (x +, a) +, b"]
  IsConnex [label = "\N\nconnex (x y : A) : x ~ y \\/ y ~ x"]
  IsContr [label = "\N\ncontr : exists x : A, forall y : A, x = y"]
  IsCotrans [label = "\N\ncotrans (x y z : A) (a : x ~ z) : x ~ y \\/ y ~ z"]
  IsDeflate [label = "\N\ndeflate (a : A) : f a <= a"]
  IsEq [label = "\N"]
  IsExpand [label = "\N\ncontract (x y : A) : dist (f x) (f y) <= dist x y"]
  IsExpand [label = "\N\nexpand (x y : A) : dist x y <= dist (f x) (f y)"]
  IsFixed [label = "\N\nfixed : f x = x"]
  IsFunExt [label = "\N\nfun_ext (A B : Type) (f g : A -> B) (a : forall x : A, f x = g x) : f = g"]
  IsFunExtDep [label = "\N\nfun_ext_dep (A : Type) (P : A -> Type) (f g : forall x : A, P x) (a : forall x : A, f x = g x) : f = g"]
  IsIdemBinOp [label = "\N\nidem_bin_op (x : A) : x + x = x"]
  IsIdemElem [label = "\N\nidem_elem : x + x = x"]
  IsIdemFn [label = "\N\nidem_fn (x : A) : f (f x) = f x"]
  IsInflate [label = "\N\ninflate (a : A) : a <= f a"]
  IsInj [label = "\N\ninj (x y : A) (e : f x = f y) : x = y"]
  IsInv [label = "\N"]
  IsInvL [label = "\N\ninv_l (a : A) : g (f a) = a"]
  IsInvR [label = "\N\ninv_r (b : B) : f (g b) = b"]
  IsIrrefl [label = "\N\nirrefl (x : A) : ~ (x ~ x)"]
  IsIso [label = "\N"]
  IsMono [label = "\N\nmono (x y : A) (l : x <= y) : f x <= f y"]
  IsPartEq [label = "\N"]
  IsPartOrd [label = "\N"]
  IsPreord [label = "\N"]
  IsProp [label = "\N\nirrel (x y : A) : x = y"]
  IsRefl [label = "\N\nrefl (x : A) : x ~ x"]
  IsSet [label = "\N\nuip (x y : A) (a b : x = y) : a = b"]
  IsStrComono [label = "\N\nstr_comono (x y : A) (l : f x < f y) : x < y"]
  IsStrConnex [label = "\N\nstr_connex (x y : A) : x ~ y \\/ x = y \\/ y ~ x"]
  IsStrMono [label = "\N\nstr_mono (x y : A) (l : x < y) : f x < f y"]
  IsSym [label = "\N\nsym (x y : A) (a : x ~ y) : y ~ x"]
  IsTotOrd [label = "\N"]
  IsTrans [label = "\N\ntrans (x y z : A) (a : x ~ y) (b : y ~ z) : x ~ z"]
  IsTrunc [label = "\N\ntrunc_zero (A : Type) : IsTrunc O A\ntrunc_succ (n : nat) (A : Type) : IsTrunc (S n) A"]

  // Superclasses and Substructures

  edge [style = solid]

  // This Library

  IsInv -> IsInvL
  IsInv -> IsInvR
  IsIso -> IsInvL
  IsIso -> IsInvR
  IsTotOrd -> IsConnex
  IsTotOrd -> IsPartOrd
  IsTotOrd -> IsPreord

  // Other Libraries

  IsEq -> IsRefl
  IsEq -> IsSym
  IsEq -> IsTrans
  IsPartEq -> IsSym
  IsPartEq -> IsTrans
  IsPartOrd -> IsAntisym
  IsPartOrd -> IsPreord
  IsPreord -> IsRefl
  IsPreord -> IsTrans
  IsStrPartOrd -> IsIrrefl
  IsStrPartOrd -> IsTrans

  // Subclasses and Instances

  edge [style = dashed]

  // This Library

  IsAssoc -> IsCompat
  IsAssoc -> IsCompatL
  IsAssoc -> IsCompatR
  IsContr -> IsProp
  IsContr -> IsTrunc
  IsFunExtDep -> IsFunExt
  IsIdemBinOp -> IsIdemElem
  IsInvL -> IsInvR
  IsInvR -> IsInvL
  IsProp -> IsSet
  IsProp -> IsTrunc
  IsSet -> IsTrunc
  IsTotOrd -> IsRefl
  IsTrunc -> IsContr
  IsTrunc -> IsProp
  IsTrunc -> IsSet

  // Other Libraries

  IsEq -> IsPartEq
  IsEq -> IsPreord
  IsStrPartOrd -> IsAsym
}
