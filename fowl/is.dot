digraph Is {
  label = "Predicative Classes"
  rankdir = BT

  node [fontname = monospace, style = filled, fillcolor = cornsilk]

  IsAntisym [label = "\N X Y : Prop\nantisym (x y : A) (a : Y x y) (b : Y y x) : X x y"]
  IsAsym [label = "\N X : Prop\nasym (x y : A) (a : X x y) (b : X y x) : 0"]
  IsComm [label = "\N X k : Prop\ncomm (x y : A) : X (k x y) (k y x)", color = red, fillcolor = yellow]
  IsConnex [label = "\N X : Prop\nconnex (x y : A) : X x y \\/ X y x"]
  IsCotrans [label = "\N X : Prop\ncotrans (x y z : A) (a : X x z) : X x y \\/ X y z"]
  IsIrrefl [label = "\N X : Prop\nirrefl (x : A) (a : X x x) : 0"]
  IsProper [label = "\N X : Prop\nproper (x : A) : X x x"]
  IsRefl [label = "\N X : Prop\nrefl (x : A) : X x x"]
  IsStrConnex [label = "\N X Y : Prop\nstr_connex (x y : A) : Y x y \\/ X x y \\/ Y y x"]
  IsSym [label = "\N X : Prop\nsym (x y : A) (a : X x y) : X y x"]
  IsTrans [label = "\N X : Prop\ntrans (x y z : A) (a : X x y) (b : X y z) : X x z"]

  subgraph cluster_order_theory_classes {
    label = "Order Theory"

    IsApart [label = "\N X : Prop"]
    IsEquiv [label = "\N X : Prop"]
    IsPartEquiv [label = "\N X : Prop"]
    IsPartOrd [label = "\N X Y : Prop"]
    IsPreord [label = "\N X : Prop"]
    IsStrPartOrd [label = "\N X : Prop"]
    IsStrPreord [label = "\N X : Prop"]
    IsStrTotOrd [label = "\N X Y : Prop"]
    IsTotOrd [label = "\N X Y : Prop"]
  }

  IsAssoc [label = "\N X k : Prop\nassoc (x y z : A) : X (k x (k y z)) (k (k x y) z)"]
  IsCancelL [label = "\N X k : Prop\n"]
  IsCancelR [label = "\N X k : Prop\n"]
  IsCancelFormL [label = "\N X Y s : Prop\ncancel_form_l (x y z : A) (a : Y (s x y) (s x z)) : X y z"]
  IsCancelFormR [label = "\N X Y s : Prop\ncancel_form_r (x y z : A) (a : Y (s x z) (s y z)) : X x y"]
  IsCompatActL [label = "\N X k al : Prop\ncompat_act_l (x y : A) (a : B) : X (al x (al y a)) (al (k x y) a)"]
  IsCompatActR [label = "\N X k ar : Prop\ncompat_act_r (a : B) (x y : A) : X (ar a (k x y)) (ar (ar a x) y)"]
  IsCompatActs [label = "\N X al ar : Prop\ncompat_acts (x : A) (a : C) (y : B) : X (al x (ar a y)) (ar (al x a) y)"]
  IsCompatBinFns [label = "\N X k m n p : Prop\ncompat_bin_fns (x : A0) (y : A1) (z : A2) : X (n x (m y z)) (p (k x y) z)"]
  IsFixed [label = "\N X x f : Prop\nfixed : X (f x) x"]
  IsInj [label = "\N X f : Prop\ninj (x y : A) (a : X (f x) (f y)) : X x y"]
  IsInjFn [label = "\N X Y f : Prop\ninj_fn (x y : A) (a : Y (f x) (f y)) : X x y"]
  IsInvBinFnL [label = "\N X x f k : Prop\ninv_bin_fn_l (y : A) : X (k (f y) y) x"]
  IsInvBinFnR [label = "\N X x f k : Prop\ninv_bin_fn_r (y : A) : X (k y (f y)) x"]
  IsInvFormL [label = "\N X x f s : Prop\ninv_form_l (y : A) : X (s (f y) y) x"]
  IsInvFormR [label = "\N X x f s : Prop\ninv_form_r (y : A) : X (s y (f y)) x"]
  IsInvL [label = "\N X x f k : Prop\ninv_l (y : A) : X (k (f y) y) x"]
  IsInvR [label = "\N X x f k : Prop\ninv_r (y : A) : X (k y (f y)) x"]
  IsInvol [label = "\N X f : Prop\ninvol (x : A) : X (f (f x)) x"]
  IsUnlActL [label = "\N X x al : Prop\nunl_act_l (a : B) : X (al x a) a"]
  IsUnlActR [label = "\N X x ar : Prop\nunl_act_r (a : B) : X (ar a x) a"]
  IsUnlL [label = "\N X x k : Prop\nunl_l (y : A) : X (k x y) y"]
  IsUnlR [label = "\N X x k : Prop\nunl_r (y : A) : X (k y x) y"]

  subgraph cluster_abstract_algebra_classes {
    label = "Abstract Algebra"

    IsCancel [label = "\N X k : Prop"]
    IsCancelForm [label = "\N X Y s : Prop"]
    IsGrp [label = "\N X x f k : Prop"]
    IsGrpHom [label = "\N X x f k Y y g m h : Prop"]
    IsInv [label = "\N X x f k : Prop"]
    IsInvForm [label = "\N X x f s : Prop"]
    IsMon [label = "\N X x k : Prop"]
    IsRing [label = "\N X x f k y m : Prop", color = red, fillcolor = yellow]
    IsSemigrp [label = "\N X k : Prop"]
    IsSemiring [label = "\N X x k y m : Prop", color = red, fillcolor = yellow]
    IsUnl [label = "\N X x k : Prop"]
  }

  IsAbsorbElemL [label = "\N\nabsorb_elem_l (x : A) : 0 * x = 0", color = red, fillcolor = yellow]
  IsAbsorbElemR [label = "\N\nabsorb_elem_r (x : A) : x * 0 = 0", color = red, fillcolor = yellow]
  IsAntidistr [label = "\N\nantidistr (x y : A) : f (x + y) = f y + f x", color = red, fillcolor = yellow]
  IsCohOrdRels [label = "\N\ncoh_ord_rels (x y : A) : x < y <-> x <= y /\\ x <> y", color = red, fillcolor = yellow]
  IsCommBinOp [label = "\N\ncomm (x y : A) : x * y = y * x", color = red, fillcolor = yellow]
  IsCommL [label = "\N\ncomm_l (x y : A) : (/ x) * y = / (x * y)", color = red, fillcolor = yellow]
  IsCommR [label = "\N\ncomm_r (x y : A) : x * (/ y) = / (x * y)", color = red, fillcolor = yellow]
  IsCommTorL [label = "\N\ncomm_tor_l (x y : B) : y / x = x / y", color = red, fillcolor = yellow]
  IsCommTorR [label = "\N\ncomm_tor_r (x y : B) : y / x = x / y", color = red, fillcolor = yellow]
  IsComono [label = "\N\ncomono (x y : A) (a : f x <= f y) : x <= y", color = red, fillcolor = yellow]
  IsContr [label = "\N\ncontr : exists x : A, forall y : A, x = y", color = red, fillcolor = yellow]
  IsDefl [label = "\N\ndeflate (x : A) : f x <= x", color = red, fillcolor = yellow]
  IsDistr [label = "\N\ndistr (x y : A) : f (x + y) = f x + f y", color = red, fillcolor = yellow]
  IsDistrL [label = "\N\ndistr_l (x y z : A) : x * (y + z) = x * y + x * z", color = red, fillcolor = yellow]
  IsDistrR [label = "\N\ndistr_r (x y z : A) : (x + y) * z = x * z + y * z", color = red, fillcolor = yellow]
  IsExpand [label = "\N\ncontract (x y : A) : dist (f x) (f y) <= dist x y", color = red, fillcolor = yellow]
  IsExpand [label = "\N\nexpand (x y : A) : dist x y <= dist (f x) (f y)", color = red, fillcolor = yellow]
  IsFunExt [label = "\N\nfun_ext (A B : Type) (f g : A -> B) (a : forall x : A, f x = g x) : f = g", color = red, fillcolor = yellow]
  IsFunExtDep [label = "\N\nfun_ext_dep (A : Type) (P : A -> Type) (f g : forall x : A, P x) (a : forall x : A, f x = g x) : f = g", color = red, fillcolor = yellow]
  IsIdem [label = "\N\nidem (x : A) : f (f x) = f x", color = red, fillcolor = yellow]
  IsIdemBinOp [label = "\N\nidem_bin_op (x : A) : x * x = x", color = red, fillcolor = yellow]
  IsIdemElem [label = "\N\nidem_elem : x * x = x", color = red, fillcolor = yellow]
  IsInfl [label = "\N\ninfl (x : A) : x <= f x", color = red, fillcolor = yellow]
  IsInflateBinOpL [label = "\N\ninflate_bin_op_l (x y : A) : y <= x + y", color = red, fillcolor = yellow]
  IsInflateBinOpR [label = "\N\ninflate_bin_op_r (x y : A) : x <= x + y", color = red, fillcolor = yellow]
  IsIsoL [label = "\N\niso_l (a : A) : g (f a) = a", color = red, fillcolor = yellow]
  IsIsoR [label = "\N\niso_r (b : B) : f (g b) = b", color = red, fillcolor = yellow]
  IsLowerBnd [label = "\N\nlower_bnd (y : A) : x <= y", color = red, fillcolor = yellow]
  IsMono [label = "\N\nmono (x y : A) (a : x <= y) : f x <= f y", color = red, fillcolor = yellow]
  IsMonoBinOp [label = "\N\nmono_bin_op (x0 y0 : A) (a0 : x0 <= y0) (x1 y1 : A) (a1 : x1 <= y1) : x0 + x1 <= y0 + y1", color = red, fillcolor = yellow]
  IsMonoBinOpL [label = "\N\nmono_bin_op_l (x y z : A) (a : x <= y) : z + x <= z + y", color = red, fillcolor = yellow]
  IsMonoBinOpR [label = "\N\nmono_bin_op_r (x y z : A) (a : x <= y) : x + z <= y + z", color = red, fillcolor = yellow]
  IsNonzeroCancelL [label = "\N\nnonzero_cancel_l (x y z : A) (f : z <> 0) (a : z + x = z + y) : x = y", color = red, fillcolor = yellow]
  IsNonzeroCancelR [label = "\N\nnonzero_cancel_r (x y z : A) (f : z <> 0) (a : x + z = y + z) : x = y", color = red, fillcolor = yellow]
  IsProp [label = "\N\nirrel (x y : A) : x = y", color = red, fillcolor = yellow]
  IsSet [label = "\N\nuip (x y : A) (a b : x = y) : a = b", color = red, fillcolor = yellow]
  IsStrComono [label = "\N\nstr_comono (x y : A) (a : f x < f y) : x < y", color = red, fillcolor = yellow]
  IsStrMono [label = "\N\nstr_mono (x y : A) (a : x < y) : f x < f y", color = red, fillcolor = yellow]
  IsTrunc [label = "\N\ntrunc_zero (A : Type) : IsTrunc O A\ntrunc_succ (n : nat) (A : Type) : IsTrunc (S n) A", color = red, fillcolor = yellow]
  IsUpperBnd [label = "\N\nupper_bnd (y : A) : y <= x", color = red, fillcolor = yellow]

  node [style = dashed]

  // Fields

  edge [style = solid]

  subgraph order_theory_fields {
    IsApart -> IsCotrans
    IsApart -> IsIrrefl
    IsApart -> IsSym
    IsEquiv -> IsRefl
    IsEquiv -> IsSym
    IsEquiv -> IsTrans
    IsPartEquiv -> IsSym
    IsPartEquiv -> IsTrans
    IsPartOrd -> IsAntisym
    IsPartOrd -> IsEquiv
    IsPartOrd -> IsPreord
    IsPartOrd -> IsProper [constraint = false]
    IsPreord -> IsRefl
    IsPreord -> IsTrans
    IsStrPartOrd -> IsIrrefl
    IsStrTotOrd -> IsProper [constraint = false]
    IsStrPartOrd -> IsTrans
    IsStrPreord -> IsIrrefl
    IsStrPreord -> IsTrans
    IsStrTotOrd -> IsConnex
    IsStrTotOrd -> IsStrPartOrd
    IsTotOrd -> IsConnex
    IsTotOrd -> IsPartOrd
  }

  subgraph abstract_algebra_fields {
    IsCancel -> IsCancelL
    IsCancel -> IsCancelR
    IsCancelForm -> IsCancelFormL
    IsCancelForm -> IsCancelFormR
    IsGrp -> IsInv
    IsGrp -> IsMon
    IsGrp -> IsProper [constraint = false]
    IsGrpHom -> IsBinPres
    IsGrpHom -> IsGrp
    IsGrpHom -> IsGrp
    IsGrpHom -> IsProper [constraint = false]
    IsInv -> IsInvL
    IsInv -> IsInvR
    IsInvForm -> IsInvFormL
    IsInvForm -> IsInvFormR
    IsMon -> IsSemigrp
    IsMon -> IsUnl
    IsSemigrp -> IsAssoc
    IsSemigrp -> IsEquiv
    IsSemigrp -> IsProper [constraint = false]
    IsUnl -> IsUnlL
    IsUnl -> IsUnlR
  }

  edge [color = red]

  IsAbsorbElem -> IsAbsorbElemL
  IsAbsorbElem -> IsAbsorbElemR
  IsCommTorLR -> IsCommTorL
  IsCommTorLR -> IsCommTorR
  IsDistr -> IsDistrL
  IsDistr -> IsDistrR
  IsIsoLR -> IsIsoL
  IsIsoLR -> IsIsoR
  IsNonzeroCancelLR -> IsNonzeroCancelL
  IsNonzeroCancelLR -> IsNonzeroCancelR
  IsRing -> IsCommBinOp
  IsRing -> IsDistr
  IsRing -> IsGrp
  IsRing -> IsMon
  IsSemiring -> IsAbsorbElem
  IsSemiring -> IsCommBinOp
  IsSemiring -> IsDistr
  IsSemiring -> IsMon

  // Derivations

  edge [style = dashed]

  edge [color = black]

  subgraph order_theory_derivations {
    IsConnex -> IsStrConnex
    IsEquiv -> IsPartEquiv
    IsEquiv -> IsPreord
    IsPartOrd -> IsRefl
    IsPartOrd -> IsTrans
    IsStrPartOrd -> IsAsym
    IsStrPartOrd -> IsStrPreord
    IsStrTotOrd -> IsAsym
    IsStrTotOrd -> IsIrrefl
    IsStrTotOrd -> IsTrans
    IsTotOrd -> IsAntisym
    IsTotOrd -> IsRefl
    IsTotOrd -> IsTrans
  }

  subgraph abstract_algebra_derivations {
    IsAssoc -> IsCompatActs
    IsCancel -> IsCancelForm
    IsCancelL -> IsCancelFormL
    IsCancelR -> IsCancelFormR
    IsCompatActL -> IsCompatBinFns
    IsCompatActR -> IsCompatBinFns
    IsCompatActs -> IsCompatBinFns
    IsGrp -> IsAntidistr
    IsGrp -> IsCancel
    IsGrp -> IsFixed
    IsGrp -> IsInj
    IsGrp -> IsInvol
    IsGrpHom -> IsNullPres
    IsGrpHom -> IsUnPres
    IsInj -> IsInjFn
    IsInv -> IsInvForm
    IsInvFormL -> IsInvBinFnL
    IsInvFormR -> IsInvBinFnR
    IsInvL -> IsInvFormL
    IsInvR -> IsInvFormR
    IsUnlL -> IsUnlActL
    IsUnlR -> IsUnlActR
  }

  edge [color = red]

  IsCommTorL -> IsCommBinOp
  IsCommTorR -> IsCommBinOp
  IsContr -> IsProp
  IsContr -> IsTrunc
  IsFunExtDep -> IsFunExt
  IsIdemBinOp -> IsIdemElem
  IsMono -> IsStrMono
  IsMonoBinOp -> IsMonoBinOpL
  IsMonoBinOp -> IsMonoBinOpR
  IsProp -> IsSet
  IsProp -> IsTrunc
  IsRing -> IsAbsorbElem
  IsRing -> IsComm
  IsRing -> IsSemiring
  IsSemiring -> IsContr
  IsSet -> IsTrunc
  IsStrMono -> IsMono
  IsTrunc -> IsContr
  IsTrunc -> IsProp
  IsTrunc -> IsSet

  // Specializations

  edge [style = dotted]

  edge [color = black]

  IsConnex -> IsComm
  IsSym -> IsComm

  edge [color = red]
}
