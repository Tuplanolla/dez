digraph Has {
  label = "Operational Classes"
  rankdir = BT

  node [fontname = monospace]

  HasOp [label = "\N\nop : {F : Type -> Type & F A}"]
  HasProp [label = "\N\nprop : {F : Type -> Type & F A}"]
  HasRel [label = "\N\nrel : {F : Type -> Type & F A}"]

  node [style = solid]

  HasActL [label = "\N\nact_l (x : A) (a : B) : B"]
  HasActR [label = "\N\nact_r (a : B) (x : A) : B"]
  HasAdd [label = "\N\nadd (x y : A) : A"]
  HasBinOp [label = "\N\nbin_op (x y : A) : A"]
  HasBinRel [label = "\N\nbin_rel (x y : A) : Prop"]
  HasCompHom [label = "\N\ncomp_hom (x y z : A) (a : y --> z) (b : x --> y) : x --> z"]
  HasDec [label = "\N\ndec : {A} + {~ A}"]
  HasDist [label = "\N\ndist (a b : B) : A"]
  HasEqDec [label = "\N\neq_dec (x y : A) : {x = y} + {x <> y}"]
  HasEquivDec [label = "\N\nequiv_dec (x y : A) : {x == y} + {~ x == y}"]
  HasEquivRel [label = "\N\nequiv_rel (x y : A) : Prop"]
  HasForm [label = "\N\nform (a b : B) : A"]
  HasHom [label = "\N\nhom (x y : A) : Prop"]
  HasIdHom [label = "\N\nid_hom (x : A) : x --> x"]
  HasInvHom [label = "\N\ninv_hom (x y : A) (a : x --> y) : y --> x"]
  HasMul [label = "\N\nmul (x y : A) : A"]
  HasNeg [label = "\N\nneg (x : A) : A"]
  HasNullOp [label = "\N\nnull_op : A"]
  HasNullRel [label = "\N\nnull_rel : Prop"]
  HasOne [label = "\N\none : A"]
  HasOrdRel [label = "\N\nord_rel (x y : A) : Prop"]
  HasRecip [label = "\N\nrecip (x : A) : A"]
  HasSMulL [label = "\N\ns_mul_l (x : A) (a : B) : B"]
  HasSMulR [label = "\N\ns_mul_r (a : B) (x : A) : B"]
  HasStrOrdRel [label = "\N\nstr_ord_rel (x y : A) : Prop"]
  HasUnOp [label = "\N\nun_op (x : A) : A"]
  HasUnRel [label = "\N\nun_rel (x : A) : Prop"]
  HasUnsquash [label = "\N\nunsquash (x : Squash A) : A"]
  HasZero [label = "\N\nzero : A"]

  node [style = dashed]

  HasBinOp -> HasOp
  HasBinRel -> HasRel
  HasNullOp -> HasOp
  HasNullRel -> HasRel
  HasUnOp -> HasOp
  HasUnRel -> HasRel
  HasUnsquash -> HasProp

  // Superclasses and Constraints

  edge [style = solid]

  HasCompHom -> HasHom
  HasEquivRel -> HasEquivDec
  HasIdHom -> HasHom
  HasInvHom -> HasHom

  // Subclasses and Related Instances

  edge [style = dashed]

  HasActL -> HasBinOp
  HasActR -> HasBinOp
  HasAdd -> HasBinOp
  HasDec -> HasUnsquash
  HasDist -> HasForm
  HasEquivRel -> HasBinRel
  HasForm -> HasBinOp
  HasHom -> HasBinRel
  HasMul -> HasBinOp
  HasNeg -> HasUnOp
  HasOne -> HasNullOp
  HasOrdRel -> HasBinRel
  HasRecip -> HasUnOp
  HasSMulL -> HasActL
  HasSMulR -> HasActR
  HasStrOrdRel -> HasBinRel
  HasZero -> HasNullOp

  // Specializations and Related Instances

  edge [style = dotted]

  HasEqDec -> HasDec
  HasEqDec -> HasEquivDec
  HasEquivDec -> HasDec
}
