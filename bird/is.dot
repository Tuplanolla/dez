digraph Is {
  label = "Predicative Class Hierarchy without Internal Homs"

  node [fontname = monospace]

  Proper [label = "Proper"]
  Refl [label = "Reflexive\nx ~~ x"]
  Sym [label = "Symmetric\nx ~~ y -> y ~~ x"]
  Trans [label = "Transitive\nx ~~ y -> y ~~ z -> x ~~ z"]

  subgraph ManySort {
    label = "ManySortedly"

    node [peripheries = 2]

    ExtAssoc [label = "ExternallyAssociative?\nx L+ (y R+ z) ~~ (x L+ y) R+ z"]
    ExtBinComm [label = "ExternallyBinaryCommutative?"]
    ExtInv [label = "ExternallyInvertible?"]
    ExtUnAbsorb [label = "ExternallyUnaryAbsorbing?\nT- T0 ~~ T0"]
    ExtUnAntidstr [label = "ExternallyUnaryAntidistributive?\nT- (x T+ y) ~~ T- y T+ T- x"]
    ExtUnl [label = "ExternallyUnital?"]
    LExtBinComm [label = "LeftExternallyBinaryCommutative?\nL- (x R+ y) == L- x R+ y"]
    LExtInv [label = "LeftExternallyInvertible?\nL- x L+ x ~~ L0"]
    LExtUnl [label = "LeftExternallyUnital?\n0 L+ x ~~ x"]
    LIntInv [label = "LeftInternallyInvertible?\nT- x T+ x ~~ T0"]
    RExtBinComm [label = "RightExternallyBinaryCommutative?\nR- (x L+ y) == x L+ R- y"]
    RExtInv [label = "RightExternallyInvertible?\nx R+ R- x ~~ R0"]
    RExtUnl [label = "RightExternallyUnital?\nx R+ 0 ~~ x"]
    RIntInv [label = "RightInternallyInvertible?\nx T+ T- x ~~ T0"]
  }

  subgraph OneSort {
    label = "OneSortedly"

    Absorb [label = "Absorbing"]
    Assoc [label = "Associative\nx + (y + z) == (x + y) + z"]
    BinComm [label = "BinaryCommutative?"]
    Cancel [label = "Cancellative"]
    Comm [label = "Commutative\nx + y == y + x"]
    Distr [label = "Distributive"]
    Eq [label = "Equivalence"]
    Grp [label = "Group"]
    Inj [label = "Injective\n- x == - y -> x == y"]
    IntInv [label = "InternallyInvertible?"]
    Inv [label = "Invertible"]
    Invol [label = "Involutive\n- - x == x"]
    LAbsorb [label = "LeftAbsorbing\n0 * x == 0"]
    LBinComm [label = "LeftBinaryCommutative?\n- (x * y) == - x * y"]
    LCancel [label = "LeftCancellative\nz + x == z + y -> x == y"]
    LDistr [label = "LeftDistributive\nx * (y + z) == x * y + x * z"]
    LInv [label = "LeftInvertible\n- x + x == 0"]
    LUnl [label = "LeftUnital\n0 + x == x"]
    Mag [label = "Magma"]
    Mon [label = "Monoid"]
    RAbsorb [label = "RightAbsorbing\nx * 0 == 0"]
    RBinComm [label = "RightBinaryCommutative?\n- (x * y) == x * - y"]
    RCancel [label = "RightCancellative\nx + z == y + z -> x == y"]
    RDistr [label = "RightDistributive\n(x + y) * z == x * z + y * z"]
    RInv [label = "RightInvertible\nx + - x == 0"]
    RUnl [label = "RightUnital\nx + 0 == x"]
    Ring [label = "Ring"]
    Sgrp [label = "Semigroup"]
    Sring [label = "Semiring"]
    UnAbsorb [label = "UnaryAbsorbing\n- 0 == 0"]
    UnAntidistr [label = "UnaryAntidistributive\n- (x + y) == - y + - x"]
    Unl [label = "Unital"]
  }

  edge [style = solid]

  Absorb -> LAbsorb
  Absorb -> RAbsorb
  BinComm -> LBinComm
  BinComm -> RBinComm
  Cancel -> LCancel
  Cancel -> RCancel
  Distr -> LDistr
  Distr -> RDistr
  Eq -> Refl
  Eq -> Sym
  Eq -> Trans
  ExtBinComm -> LExtBinComm
  ExtBinComm -> RExtBinComm
  ExtInv -> LExtInv
  ExtInv -> RExtInv
  ExtUnl -> LExtUnl
  ExtUnl -> RExtUnl
  Grp -> Inv
  Grp -> Mon
  Grp -> Proper
  IntInv -> LIntInv
  IntInv -> RIntInv
  Inv -> LInv
  Inv -> RInv
  Mag -> Eq
  Mag -> Proper
  Mon -> Sgrp
  Mon -> Unl
  Sgrp -> Assoc
  Sgrp -> Mag
  Unl -> LUnl
  Unl -> RUnl

  Sring -> Absorb
  Ring -> Comm
  Sring -> Comm
  Ring -> Distr
  Sring -> Distr
  Ring -> Grp
  Ring -> Mon
  Sring -> Mon
  Sring -> Mon

  edge [style = dashed]

  UnAbsorb -> ExtUnAbsorb
  UnAntidistr -> ExtUnAntidstr
  Assoc -> ExtAssoc
  BinComm -> ExtBinComm
  ExtInv -> IntInv
  Grp -> UnAbsorb
  Grp -> UnAntidistr
  Grp -> Cancel
  Grp -> Inj
  Grp -> Invol
  Inv -> ExtInv
  LBinComm -> LExtBinComm
  LExtInv -> LIntInv
  LInv -> LExtInv
  LUnl -> LExtUnl
  RBinComm -> RExtBinComm
  RExtInv -> RIntInv
  RInv -> RExtInv
  RUnl -> RExtUnl
  Unl -> ExtUnl

  Ring -> Absorb
  Ring -> BinComm
  Ring -> Sring
}
