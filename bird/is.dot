digraph Is {
  label = "Predicative Class Hierarchy without Internal Homs"

  node [fontname = monospace]

  Proper [label = "Proper"]
  Refl [label = "Reflexive\nx ~~ x"]
  Sym [label = "Symmetric\nx ~~ y -> y ~~ x"]
  Trans [label = "Transitive\nx ~~ y -> y ~~ z -> x ~~ z"]

  subgraph ThreeSort {
    label = "ThreeSortedly"

    node [peripheries = 3]

    Bicompat [label = "Bicompatible\nx L+ (y R+ z) == (x L+ y) R+ z"]
  }

  subgraph TwoSort {
    label = "TwoSortedly"

    node [peripheries = 2]

    LCompat [label = "LeftCompatible\n(a + b) L+ x == a L+ (b L+ x)"]
    LExtBinComm [label = "LeftExternallyBinaryCommutative?\nL- (x R+ y) == L- x R+ y"]
    LSgrpAct [label = "LeftSemigroupAction"]
    LUnl2 [label = "LeftUnital\nL0 L+ x == x"]
    RCompat [label = "RightCompatible\nx R+ (a + b) == (x R+ a) R+ b"]
    RExtBinComm [label = "RightExternallyBinaryCommutative?\nR- (x L+ y) == x L+ R- y"]
    RSgrpAct [label = "RightSemigroupAction"]
    RUnl2 [label = "RightUnital\nx R+ R0 == x"]
    Unl2 [label = "Unital"]
  }

  subgraph OneSort {
    label = "OneSortedly"

    Absorb [label = "Absorbing"]
    Assoc [label = "Associative\nx + (y + z) == (x + y) + z"]
    BinComm [label = "BinaryCommutative?"]
    Cancel [label = "Cancellative"]
    Comm [label = "Commutative\nx + y == y + x"]
    Distr [label = "Distributive"]
    Eq [label = "Equivalence"]
    Grp [label = "Group"]
    Inj [label = "Injective\n- x == - y -> x == y"]
    Inv [label = "Invertible"]
    Invol [label = "Involutive\n- - x == x"]
    LAbsorb [label = "LeftAbsorbing\n0 * x == 0"]
    LBinComm [label = "LeftBinaryCommutative?\n- (x * y) == - x * y"]
    LCancel [label = "LeftCancellative\nz + x == z + y -> x == y"]
    LDistr [label = "LeftDistributive\nx * (y + z) == x * y + x * z"]
    LInv [label = "LeftInvertible\n- x + x == 0"]
    LUnl [label = "LeftUnital\n0 + x == x"]
    Mag [label = "Magma"]
    Mon [label = "Monoid"]
    RAbsorb [label = "RightAbsorbing\nx * 0 == 0"]
    RBinComm [label = "RightBinaryCommutative?\n- (x * y) == x * - y"]
    RCancel [label = "RightCancellative\nx + z == y + z -> x == y"]
    RDistr [label = "RightDistributive\n(x + y) * z == x * z + y * z"]
    RInv [label = "RightInvertible\nx + - x == 0"]
    RUnl [label = "RightUnital\nx + 0 == x"]
    Ring [label = "Ring"]
    Sgrp [label = "Semigroup"]
    Sring [label = "Semiring"]
    UnAbsorb [label = "UnaryAbsorbing\n- 0 == 0"]
    UnAntidistr [label = "UnaryAntidistributive\n- (x + y) == - y + - x"]
    Unl [label = "Unital"]
  }

  edge [style = solid]

  Absorb -> LAbsorb
  Absorb -> RAbsorb
  BinComm -> LBinComm
  BinComm -> RBinComm
  Cancel -> LCancel
  Cancel -> RCancel
  Distr -> LDistr
  Distr -> RDistr
  Eq -> Refl
  Eq -> Sym
  Eq -> Trans
  Grp -> Inv
  Grp -> Mon
  Grp -> Proper
  Inv -> LInv
  Inv -> RInv
  LSgrpAct -> LCompat
  LSgrpAct -> Sgrp
  Mag -> Eq
  Mag -> Proper
  Mon -> Sgrp
  Mon -> Unl
  RSgrpAct -> RCompat
  RSgrpAct -> Sgrp
  Sgrp -> Assoc
  Sgrp -> Mag
  Unl -> LUnl
  Unl -> RUnl
  Unl2 -> LUnl2
  Unl2 -> RUnl2

  Sring -> Absorb
  Ring -> Comm
  Sring -> Comm
  Ring -> Distr
  Sring -> Distr
  Ring -> Grp
  Ring -> Mon
  Sring -> Mon
  Sring -> Mon

  edge [style = dashed]

  Assoc -> Bicompat
  Grp -> UnAbsorb
  Grp -> UnAntidistr
  Grp -> Cancel
  Grp -> Inj
  Grp -> Invol
  LBinComm -> LExtBinComm
  LUnl -> LUnl2
  RBinComm -> RExtBinComm
  RUnl -> RUnl2
  Unl -> Unl2

  Ring -> Absorb
  Ring -> BinComm
  Ring -> Sring
}
