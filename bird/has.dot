digraph Has {
  label = "Operational Class Hierarchy without Internal Homs"

  node [fontname = monospace]

  subgraph Three {
    label = "ThreeSorted"

    node [peripheries = 3]

    BinFn [label = "BinaryFunction\nA -> B -> C"]
  }

  subgraph Two {
    label = "TwoSorted"

    node [peripheries = 2]

    subgraph TwoGrd {
      label = "Graded"

      node [style = dashed]

      GrdLAct [label = "LeftAction\nP i -> Q j -> Q (i + j)"]
      GrdRAct [label = "RightAction\nQ i -> P j -> Q (i + j)"]
    }

    Fn [label = "Function\nA -> B"]
    LAct [label = "LeftAction\nA -> B -> B"]
    LTor [label = "LeftTorsion\nA -> A -> B"]
    RAct [label = "RightAction\nB -> A -> B"]
    RTor [label = "RightTorsion\nA -> A -> B"]
    Tor [label = "Torsion\nA -> A -> B"]
    TwoBinRel [label = "BinaryRelation\nA -> B -> Prop"]
  }

  subgraph One {
    label = "OneSorted"

    subgraph OneGrd {
      label = "Graded"

      node [style = dashed]

      GrdBinOp [label = "BinaryOperation\nP i -> P j -> P (i + j)"]
      GrdNullOp [label = "NullaryOperation\nP 0"]
      GrdUnOp [label = "UnaryOperation\nP i -> P (- i)"]

      GrdAdd [label = "Addition\nP i -> P j -> P (i + j)"]
      GrdZero [label = "Zero\nP 0"]
      // GrdNeg [label = "Negation\nP i -> P (- i)"]
      GrdMul [label = "Multiplication\nP i -> P j -> P (i + j)"]
      GrdOne [label = "One\nP 0"]
      // GrdRecip [label = "Reciprocation\nP i -> P (- i)"]
    }

    BinOp [label = "BinaryOperation\nA -> A -> A"]
    NullOp [label = "NullaryOperation\nA"]
    UnOp [label = "UnaryOperation\nA -> A"]

    Add [label = "Addition\nA -> A -> A"]
    Zero [label = "Zero\nA"]
    Neg [label = "Negation\nA -> A"]
    Mul [label = "Multiplication\nA -> A -> A"]
    One [label = "One\nA"]
    Recip [label = "Reciprocation\nA -> A"]

    Join [label = "Join\nA -> A -> A"]
    Bot [label = "Bottom\nA"]
    Meet [label = "Meet\nA -> A -> A"]
    Top [label = "Top\nA"]

    Enum [label = "Enumeration\nlist A"]

    BinRel [label = "BinaryRelation\nA -> A -> Prop"]
    EqRel [label = "EquivalenceRelation\nA -> A -> Prop"]
    LNullOp [label = "LeftNullaryOperation\nA"]
    LUnOp [label = "LeftUnaryOperation\nA -> A"]
    OrdRel [label = "OrderRelation\nA -> A -> Prop"]
    Prop [label = "Proposition\nA -> Prop"]
    RNullOp [label = "RightNullaryOperation\nA"]
    RUnOp [label = "RightUnaryOperation\nA -> A"]
  }

  node [fillcolor = violet, style = filled]

  GrdBinOp -> BinOp
  GrdNullOp -> NullOp
  GrdUnOp -> UnOp
  GrdLAct -> BinOp
  GrdRAct -> BinOp

  edge [style = dashed]

  BinOp -> Add
  NullOp -> Zero
  UnOp -> Neg
  BinOp -> Mul
  NullOp -> One
  UnOp -> Recip

  GrdBinOp -> GrdAdd
  GrdNullOp -> GrdZero
  // GrdUnOp -> GrdNeg
  GrdBinOp -> GrdMul
  GrdNullOp -> GrdOne
  // GrdUnOp -> GrdRecip

  BinOp -> Join
  NullOp -> Bot
  BinOp -> Meet
  NullOp -> Top

  BinOp -> LAct
  BinOp -> RAct
  BinOp -> Tor
  BinRel -> TwoBinRel
  EqRel -> BinRel
  GrdBinOp -> GrdLAct
  GrdBinOp -> GrdRAct
  LAct -> BinFn
  LNullOp -> NullOp
  LTor -> Tor
  LUnOp -> UnOp
  OrdRel -> BinRel
  RAct -> BinFn
  RNullOp -> NullOp
  RTor -> Tor
  RUnOp -> UnOp
  UnOp -> Fn
}
